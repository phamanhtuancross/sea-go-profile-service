syntax = "proto3";
package v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "ToDo service";
        version: "1.0";
        contact: {
            name: "profile service for VINID";
            email: "phamanhtuancross@gmail.com";
        };
    };
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";
    responses: {
        key: "404";
        value: {
            description: "Returned when the resource does not exist.";
            schema: {
                json_schema: {
                    type: STRING;
                }
            }
        }
    }
};


message Account{
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    string phone_number = 5;
    string user_name = 6;
    string password = 7;
    string avatar_url = 8;
    string more_info = 9;

    google.protobuf.Timestamp dob = 10;
    google.protobuf.Timestamp created_time = 11;
    google.protobuf.Timestamp updated_time = 12;
}

message Request {

}

message Response {

}
message HomeRequest {
    string api = 1;
}

message HomeResponse {
    string message = 1;
}

message RegisterRequest {
    string api = 1;
    Account account_info = 2;
}

message RegisterResponse {
    string api = 1;
    string token = 2;
    Account account_info = 3;

}

message GetAllRequest{
    string api = 1;
}

message GetAllResponse {
    string api = 1;
    Account account_info = 2;
}

/// integration chat service inside profile service
message Point {
    int32 latitude = 1;
    int32 longitude = 2;
}

message Rectangle {
    Point lo = 1;
    Point hi = 2;
}

message Feature {
    string name = 1;
    Point location = 2;
}

message RouteNote {
    Point location = 1;
    string message = 2;
}

message RouteSummary {
    int32 point_count = 1;
    int32 feature_count = 2;
    int32 distance = 3;
    int32 elapsed_time = 4;
}

message EmptyParameters {}

message FashionCategory {
    int32 id = 1;
    string name = 2;
    string description = 3;
    string image_url = 4;
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
    Account user_info = 2;
}


service ProfileService {

    rpc Home(HomeRequest) returns(HomeResponse) {
        option(google.api.http) = {
            get: "/v1"
        };
    }

    rpc Register(RegisterRequest) returns (RegisterResponse) {
        option(google.api.http) = {
            post: "/v1/register"
            body: "*"
        };
    }

//    rpc getAll (GetAllRequest) returns (stream GetAllResponse) {
//        option(google.api.http) = {
//            post: "/v1/all"
//            body: "*"
//        };
//    }
//

    rpc Login (LoginRequest) returns (LoginResponse);

    // Immediately returns feature of a request
    rpc GetFeature(Point) returns (Feature) {}

    // Splits a stream of rectangles and returns each feature in a stream of rectangles
    rpc ListFeatures(Rectangle) returns (stream Feature) {}

    //
    rpc RecordRoute(stream Point) returns (RouteSummary) {}

    rpc RouteChat(stream RouteNote) returns (stream RouteNote) {}

    rpc ListFashionCategories(EmptyParameters) returns (stream FashionCategory) {}
}